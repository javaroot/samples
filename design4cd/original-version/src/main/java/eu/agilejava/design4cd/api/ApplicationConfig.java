/*
 * The MIT License
 *
 * Copyright 2013 Ivar Grimstad <ivar.grimstad@gmail.com>.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package eu.agilejava.design4cd.api;

import java.util.HashSet;
import java.util.Set;
import javax.ws.rs.core.Application;

/**
 * Generated configuration of REST API.
 *
 * @author Ivar Grimstad <ivar.grimstad@gmail.com>
 */
@javax.ws.rs.ApplicationPath("api")
public class ApplicationConfig extends Application {

   @Override
   public Set<Class<?>> getClasses() {
      Set<Class<?>> resources = new HashSet<>();
      // following code can be used to customize Jersey 2.0 JSON provider:
      try {
         resources.add(Class.forName("org.glassfish.jersey.jackson.JacksonFeature"));
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(getClass().getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      addRestResourceClasses(resources);
      return resources;
   }

   /**
    * Do not modify addRestResourceClasses() method. It is automatically re-generated by NetBeans REST support to
    * populate given list with all resources defined in the project.
    */
   private void addRestResourceClasses(Set<Class<?>> resources) {
      resources.add(eu.agilejava.design4cd.api.CookBookResource.class);
      resources.add(eu.agilejava.design4cd.api.CookBookUserResource.class);
      resources.add(eu.agilejava.design4cd.api.RecipeResource.class);
   }
}